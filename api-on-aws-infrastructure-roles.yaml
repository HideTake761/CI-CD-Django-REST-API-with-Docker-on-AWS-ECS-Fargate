# Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
AWSTemplateFormatVersion: 2010-09-09
Description: Configure the AWSCloudFormationStackSetAdministrationRole to enable use of AWS CloudFormation StackSets.
# Description:テンプレートの説明
Metadata:
  TemplateVersion: 'v1.34.1'
Parameters: # 外部から渡す値の名前、データ型、デフォルト値を定義
# ここの項目(あとスタック名、タグ)をコンソールからスタック作成時に聞かれる
  AdminRoleName: # IAMロールで、「信頼関係」にcloudformation.amazonaws.comがあるもの
    Type: String
  ExecutionRoleName: # IAMロールで、「信頼関係」に管理アカウントのIAMロール（AdminRole）があるもの
    Type: String
  DNSDelegationRoleName:
    Type: String
    Default: "" # Defaultがあるパラメータは必須ではない。jsonファイルでの指定で省略可能
  AppDNSDelegatedAccounts:
    Type: CommaDelimitedList
    Default: ""
  DelegatedAccountId:
    Type: String
    Description: "AWS Account ID to delegate DNS management to"
  AppDomainName:
    Type: String
    Default: ""
  AppDomainHostedZoneID:
    Type: String
    Default: ""
  AppName:
    Type: String
Conditions:
  DelegateDNS:
    !Not [!Equals [ !Ref AppDomainName, "" ]]
  # !Ref AppDomainName:パラメータAppDomainNameの値を参照
  # !Equals [!Ref AppDomainName, "" ]:その値が空文字("")かどうかチェック
  # !Not [...]:[]内がNotならTrue

Resources: # 何を作成するか。テンプレートでmustで必要なのはこのセクションだけ
  AdministrationRole: 
    Metadata:
      'aws:copilot:description': 'A StackSet admin role assumed by CloudFormation to manage regional stacks'
    Type: AWS::IAM::Role # IAMロールを作成するテンプレート。Parameters:のAdminRoleName:は任意に決めてよい
    Properties:
      RoleName: !Ref AdminRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole 
      Path: /
      Policies:
        - PolicyName: AssumeRole-AWSCloudFormationStackSetExecutionRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Sub 'arn:${AWS::Partition}:iam::*:role/${ExecutionRoleName}'
                  # !Sub:文字列の中に変数を埋め込む
  ExecutionRole:
    Metadata:
      'aws:copilot:description': 'An IAM role assumed by the admin role to create ECR repositories, KMS keys, and S3 buckets'
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ExecutionRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt AdministrationRole.Arn
              # !GetAtt:リソースの属性(Attribute)を取得。
              # この場合AdministrationRoleというIAMロールのARN(Amazon Resource Name)を取得
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: ExecutionRolePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
              - Sid: StackSetRequiredPermissions # https://go.aws/3Sa5Tcf
                Effect: Allow
                Action:
                  - cloudformation:*
                  - s3:*
                  - sns:*
                Resource: "*"
              - Sid: KeyAdminPermissions # https://go.aws/3BIqf7a
                Effect: Allow
                Action:
                  - kms:Create*
                  - kms:Describe*
                  - kms:Enable*
                  - kms:List*
                  - kms:Put*
                  - kms:Update*
                  - kms:Revoke*
                  - kms:Disable*
                  - kms:Get*
                  - kms:Delete*
                  - kms:TagResource
                  - kms:UntagResource
                  - kms:ScheduleKeyDeletion
                  - kms:CancelKeyDeletion
                Resource: "*"
              - Sid: ManageECRRepos
                Effect: Allow
                Action:
                  - ecr:DescribeImageScanFindings
                  - ecr:GetLifecyclePolicyPreview
                  - ecr:CreateRepository
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetAuthorizationToken
                  - ecr:ListTagsForResource
                  - ecr:ListImages
                  - ecr:DeleteLifecyclePolicy
                  - ecr:DeleteRepository
                  - ecr:SetRepositoryPolicy
                  - ecr:BatchGetImage
                  - ecr:DescribeImages
                  - ecr:DescribeRepositories
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetRepositoryPolicy
                  - ecr:GetLifecyclePolicy
                  - ecr:TagResource
                Resource: "*"

  DNSDelegationRole:
    Metadata:
      'aws:copilot:description': 'A DNS delegation role to allow accounts: ${DelegatedAccountId} to manage your domain'
    Type: AWS::IAM::Role
    Condition: DelegateDNS
    Properties:
      RoleName: !Ref DNSDelegationRoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:  !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action:
              - sts:AssumeRole
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:${AWS::Partition}:iam::${DelegatedAccountId}:root
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: DNSDelegationPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
              - Sid: HostedZoneReadRecords
                Effect: Allow
                Action:
                  - route53:Get*
                  - route53:List*
                Resource: "*"
              - Sid: HostedZoneUpdate
                Effect: Allow
                Action:
                  - route53:ChangeResourceRecordSets
                Resource:
                  - !Sub arn:${AWS::Partition}:route53:::hostedzone/${AppHostedZone}
                  - !Sub arn:${AWS::Partition}:route53:::hostedzone/${AppDomainHostedZoneID}

  AppHostedZone:
    Metadata:
      'aws:copilot:description': !Sub 'A hosted zone for ${AppName}.'
    Type: AWS::Route53::HostedZone
    Condition: DelegateDNS
    Properties:
      HostedZoneConfig:
        Comment: !Sub "Hosted zone for copilot application ${AppName}: ${AppName}.${AppDomainName}"
      Name: !Sub ${AppName}.${AppDomainName}

  AppDomainDelegationRecordSet:
    Metadata:
      'aws:copilot:description': !Sub 'Add NS records to delegate responsibility to the ${AppName}. subdomain'
    Type: AWS::Route53::RecordSet
    Condition: DelegateDNS
    Properties:
      HostedZoneId: !Sub ${AppDomainHostedZoneID}
      Comment: !Sub "Record for copilot domain delegation for application ${AppDomainName}"
      Name: !Sub ${AppName}.${AppDomainName}.
      Type: NS
      TTL: '900'
      ResourceRecords: !GetAtt AppHostedZone.NameServers

Outputs: # スタック作成後に表示する値
  ExecutionRoleARN:
    Description: ExecutionRole used by this application to set up ECR Repos, KMS Keys and S3 buckets
    Value: !GetAtt ExecutionRole.Arn
  AdministrationRoleARN:
    Description: AdministrationRole used by this application to manage this application's StackSet
    Value: !GetAtt AdministrationRole.Arn
  TemplateVersion:
    Description: Required output to force the stack to update if mutating version.
    Value: v1.34.1
