name: CI/CD Pipeline for Django App

on:
  push:
    branches:
      - main
    paths:
      - 'api_server/**'      # Django project path
      - 'myapi/**'          # Django application path
      - 'requirements.txt'
      - 'Dockerfile'
      - '.github/workflows/docker-build.yaml'

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django tests
        env:
          DJANGO_SETTINGS_MODULE: api_server.settings
        run: |
          python manage.py test
  
  build-and-push:
    needs: run-tests # run-tests ジョブが成功した場合のみ、このジョブを実行
    if: success() # run-tests ジョブが成功した場合にのみ実行することを明示

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3 # GitHub Actionsにおける公式のDocker関連アクション
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # GitHub Secretsの設定:
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Docker Buildx(高機能ビルドツール)をセットアップ

      - name: Build and push Docker image
        uses: docker/build-push-action@v5 # Dockerイメージのビルドとプッシュを行う
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: | 
            ${{ secrets.DOCKERHUB_USERNAME }}/django-rest-framework:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/django-rest-framework:${{ github.sha }}
          # GitHub Secretsからユーザー名を動的に取得
          # django-rest-framework:Docker Hubでのイメージ名
          # ${{github.sha}}:GitHub Actionsの環境変数で、特定のコミットを参照するために
          # 自動的に提供される値(手動で記入しなくていい)。
          # GitHub Actionsのキャッシュ機能を利用するように設定
          cache-from: type=gha
          cache-to: type=gha,mode=max
